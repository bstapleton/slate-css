$maxInputWidth: $defaultUnit * 62.5;
$maxFieldWidth: $maxInputWidth + ($defaultUnit * 6); // Leave space on the right for margin and validation indicators.

.field {
    margin: 0 0 ($defaultUnit * 2.5) 0;
    padding: ($defaultUnit * 1.5) 0 0;
    max-width: $maxFieldWidth;

    &:hover {
        .field__label {
            padding-left: $defaultUnit;
            border-left: ($defaultUnit * 0.5) solid $primary;
        }
    }

    &.required {
        .field__label::after {
            content: " *";
        }

        .valid-feedback::before {
            content: "* Required. ";
        }

        &.error {
            .valid-feedback::before {
                content: "* Error: ";
                font-weight: bold;
                color: $danger;
            }
        }
    }

    &.upload .icon {
        top: $defaultUnit * 7;
    }

    .warning-message {
        display: none;
    }

    .message {
        margin-left: 0;
    }

    &.error,
    &.warning,
    &.valid {
        .warning-message {
            display: none;
        }

        .completion-indicator {
            display: block;
        }
    }

    &.error {
        .field__label {
            color: $danger !important;

            &.error {
                display: none !important;
            }
        }

        .icon.error {
            display: block;
        }

        .field-validation-error {
            display: inline;
            color: $danger;
        }
    }

    &.warning {
        .field__label {
            color: $warning !important;

            &.error {
                display: none !important;
            }
        }

        .icon.warning {
            display: block;

            svg {
                fill: $warning;
            }
        }

        .warning-message {
            display: block;
            color: $warning;
        }
    }

    &.valid {
        .field__label {
            color: $success;

            &.error {
                display: none !important;
            }
        }

        .icon.valid {
            display: block;
        }

        .field__help {
            border-left-color: $success;
        }

        textarea {
            margin-bottom: -6px;
        }
    }

    .input-group,
    .login-group {
        display: flex;
        align-items: center;
        margin-bottom: $defaultUnit * 2;

        .input {
            flex: 1 1 auto;
        }

        .input-group-append {
            flex: 0 0 ($defaultUnit * 3);
        }

        .input-group-prepend {
            flex: 0 0 ($defaultUnit * 5);
        }
    }
}

.field,
.field:hover {
    &.field--currency,
    &.field--email,
    &.field--number,
    &.field--password,
    &.field--select,
    &.field--text,
    &.field--textarea {
        &.error {
            .field__input {
                border-color: $danger;
            }
        }
    }

    &:first-child {
        margin-top: 0;
    }
}

.field__input {
    font-size: $defaultFontSize;
    border-radius: $defaultUnit;
    padding: $defaultUnit * 1.5;
    outline: 0;
    width: 100%;
    max-width: $maxInputWidth;
    margin-right: $defaultUnit * 2;
    @if (lightness($background) > 50) {
        border: 2px solid $grey-400;
        background-color: $grey-100;
        color: $grey-900;
    }
    @else {
        border: 2px solid $grey-600;
        background-color: $grey-900;
        color: $grey-100;
    }

    @include dataTypes;

    &:hover {
        &:not(:focus) {
            @if (lightness($background) > 50) {
                border-color: $grey-300;
            }
            @else {
                border-color: $grey-700;
            }
        }

        &.disabled,
        &:disabled {
            color: $grey-500;
            border-color: $grey-500;
            cursor: not-allowed;
        }
    }

    &:focus {
        border-color: $primary;

        @if (lightness($background) > 50) {
            background-color: $grey-100;
        }
        @else {
            background-color: $grey-900;
        }
    }

    &.valid {
        border-color: $success;
    }

    &:disabled,
    &.disabled {
        color: $grey-500;
        @if (lightness($background) > 50) {
            background-color: $white;
        }
        @else {
            background-color: $black;
        }
        border-bottom: 2px solid $grey-500;

        &:hover {
            color: #aaa;
            background-color: $white;
            border-bottom: 2px solid $primary;
            cursor: not-allowed;
        }
    }
}

.field__label {
    transition: padding 0.2s ease, color 0.2s ease;
    font-weight: bold;
    display: inline-block;
    width: initial;
    font-size: initial;
    margin-bottom: $defaultUnit * 0.5;

    &.disabled {
        color: $grey-500;

        &:hover {
            cursor: not-allowed;
        }
    }

    &.active,
    &.complete {
        font-size: $defaultUnit * 1.5;
        top: $defaultUnit * 0.5;
        padding: 0;
        margin-left: 0;
        @if (lightness($background) > 50) {
            background-color: $grey-100;
        }
        @else {
            background-color: $grey-900;
        }

        @include sm-up() {
            padding: 0 ($defaultUnit * 0.5);
            margin-left: $defaultUnit;
        }
    }

    &.active {
        color: $primary;
    }
}

.field__help {
    margin-bottom: $defaultUnit * 0.75;
    font-style: italic;
    @if (lightness($background) > 50) {
        color: $grey-600;
    }
    @else {
        color: $grey-400;
    }

    &.hidden {
        display: none;
    }

    &.hovered {
        @if (lightness($background) > 50) {
            color: $grey-700;
        }
        @else {
            color: $grey-300;
        }
    }

    &.warning {
        color: $warning;
    }
}

.field__help,
.field-validation-error,
.warning-message,
.valid-feedback {
    max-width: $maxInputWidth;
}

.field-validation-error,
.warning-message,
.valid-feedback {
    margin: 0;
}

.actions {
    padding: ($defaultUnit * 3) ($defaultUnit * 4) $defaultUnit;

    @include xs() {
        .button:nth-child(1),
        .button:nth-child(2) {
            width: calc(50% - (#{$defaultUnit} * 1.5));
        }

        .button:only-child {
            width: 100%;
        }
    }

    @include sm-up() {
        padding: ($defaultUnit * 3) ($defaultUnit * 6) ($defaultUnit * 3);
    }
}